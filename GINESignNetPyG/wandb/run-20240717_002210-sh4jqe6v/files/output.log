BN? True
BN? True
BN? True
BN? True
BN? True
BN? True
BN? True
BN? True
BN? True
BN? True
BN? True
BN? True
batchnorm BN
hidden 6
BN? True
> /lfs/hyperturing1/0/echoi1/Random-SignNet/GINESignNetPyG/core/model_utils/pyg_gnn_wrapper.py(154)forward()
-> laplacian_batch = reconstruct_laplacian_from_flat(laplacian, num_nodes_per_graph)
/lfs/hyperturing1/0/echoi1/Random-SignNet/GINESignNetPyG/core/model.py:102: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matrices or `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3675.)
  rand_out = F.linear(x_r.T.reshape(N*M, -1), self.weight[:, -1:], self.bias) #N*MxF
149  	        num_nodes_per_graph = scatter_add(batch.new_ones(x.size(0)), batch, dim=0, dim_size=batch_size).tolist()
150  	        max_num_nodes = max(num_nodes_per_graph)
151  	
152  	        import pdb; pdb.set_trace()
153  	        # Reconstruct the Laplacian matrix from the flattened form
154  ->	        laplacian_batch = reconstruct_laplacian_from_flat(laplacian, num_nodes_per_graph)
155  	
156  	        num_features = x.size(1)
157  	        num_samples = x.size(2)
158  	        x_padded = torch.zeros((batch_size, max_num_nodes, num_features, num_samples), device=x.device)
159  	        idx = batch.repeat_interleave(num_features * num_samples)
> /lfs/hyperturing1/0/echoi1/Random-SignNet/GINESignNetPyG/core/model_utils/pyg_gnn_wrapper.py(156)forward()
-> num_features = x.size(1)
> /lfs/hyperturing1/0/echoi1/Random-SignNet/GINESignNetPyG/core/model_utils/pyg_gnn_wrapper.py(157)forward()
-> num_samples = x.size(2)
> /lfs/hyperturing1/0/echoi1/Random-SignNet/GINESignNetPyG/core/model_utils/pyg_gnn_wrapper.py(158)forward()
-> x_padded = torch.zeros((batch_size, max_num_nodes, num_features, num_samples), device=x.device)
> /lfs/hyperturing1/0/echoi1/Random-SignNet/GINESignNetPyG/core/model_utils/pyg_gnn_wrapper.py(159)forward()
-> idx = batch.repeat_interleave(num_features * num_samples)
> /lfs/hyperturing1/0/echoi1/Random-SignNet/GINESignNetPyG/core/model_utils/pyg_gnn_wrapper.py(160)forward()
-> x_padded.index_add_(0, idx, x.view(-1, num_features * num_samples))
RuntimeError: index_add_(): Number of indices (28608000) should be equal to source.size(dim): (2235), for dim: 0
> /lfs/hyperturing1/0/echoi1/Random-SignNet/GINESignNetPyG/core/model_utils/pyg_gnn_wrapper.py(160)forward()
-> x_padded.index_add_(0, idx, x.view(-1, num_features * num_samples))
155  	
156  	        num_features = x.size(1)
157  	        num_samples = x.size(2)
158  	        x_padded = torch.zeros((batch_size, max_num_nodes, num_features, num_samples), device=x.device)
159  	        idx = batch.repeat_interleave(num_features * num_samples)
160  ->	        x_padded.index_add_(0, idx, x.view(-1, num_features * num_samples))
161  	        x_padded = x_padded.view(batch_size, max_num_nodes, num_features, num_samples)
162  	
163  	        import pdb; pdb.set_trace()
164  	        # Perform batch matrix multiplication for each sample
165  	        LX = torch.einsum('bij,bjfn->bifn', laplacian_batch, x_padded)
tensor([ 0,  0,  0,  ..., 99, 99, 99], device='cuda:0')
torch.Size([28608000])
torch.Size([100, 34, 128, 100])
torch.Size([2235, 128, 100])
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/lfs/hyperturing1/0/echoi1/Random-SignNet/GINESignNetPyG/train/zinc.py", line 260, in <module>
    run(config_path, cfg, create_dataset, create_model, train, test)
  File "/lfs/hyperturing1/0/echoi1/Random-SignNet/GINESignNetPyG/core/train.py", line 47, in run
    train_loss = train(train_loader, model, optimizer, device=cfg.device, num_samples=cfg.train.num_samples)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lfs/hyperturing1/0/echoi1/Random-SignNet/GINESignNetPyG/train/zinc.py", line 77, in train
    loss = (model(data, rand_x).squeeze() - y).abs().mean()
            ^^^^^^^^^^^^^^^^^^^
  File "/lfs/hyperturing1/0/echoi1/env/micromamba/envs/graphenv/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lfs/hyperturing1/0/echoi1/env/micromamba/envs/graphenv/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lfs/hyperturing1/0/echoi1/Random-SignNet/GINESignNetPyG/core/sign_net.py", line 149, in forward
    return self.gnn(data, x_rand)
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/lfs/hyperturing1/0/echoi1/env/micromamba/envs/graphenv/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lfs/hyperturing1/0/echoi1/env/micromamba/envs/graphenv/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lfs/hyperturing1/0/echoi1/Random-SignNet/GINESignNetPyG/core/model.py", line 182, in forward
    x = layer(x, data.edge_index, edge_attr, data.laplacian, data.batch)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lfs/hyperturing1/0/echoi1/env/micromamba/envs/graphenv/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lfs/hyperturing1/0/echoi1/env/micromamba/envs/graphenv/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lfs/hyperturing1/0/echoi1/env/micromamba/envs/graphenv/lib/python3.11/bdb.py", line 96, in trace_dispatch
    return self.dispatch_exception(frame, arg)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lfs/hyperturing1/0/echoi1/env/micromamba/envs/graphenv/lib/python3.11/bdb.py", line 176, in dispatch_exception
    if self.quitting: raise BdbQuit
                      ^^^^^^^^^^^^^
bdb.BdbQuit